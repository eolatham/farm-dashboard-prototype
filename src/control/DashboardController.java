/**
 * This file was adapted from the "Sample Controller Skeleton"
 * generated by SceneBuilder.
 */

package control;

import boundary.Main;
import entity.Item;
import entity.ItemComponent;
import entity.ItemContainer;
import java.net.URL;
import java.util.ResourceBundle;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.control.TreeItem;
import javafx.scene.control.TreeView;

public class DashboardController {
  @FXML
  private ResourceBundle resources;

  @FXML
  private URL location;

  @FXML
  private TextArea infoLog = new TextArea("");

  @FXML
  private TreeView<ItemComponent> farmTreeView = new TreeView<ItemComponent>();

  @FXML
  private TextField itemName = new TextField();

  @FXML
  private TextField itemLocationX = new TextField();

  @FXML
  private TextField itemLocationY = new TextField();

  @FXML
  private TextField itemLength = new TextField();

  @FXML
  private TextField itemWidth = new TextField();

  @FXML
  private TextField itemHeight = new TextField();

  @FXML
  private TextField itemPrice = new TextField();

  private Main main;

  @FXML
  public void initialize() {
    assert infoLog !=
    null : "fx:id=\"infoLog\" was not injected: check your FXML file 'Dashboard.fxml'.";
    assert farmTreeView !=
    null : "fx:id=\"farmTreeView\" was not injected: check your FXML file 'Dashboard.fxml'.";
    assert itemName !=
    null : "fx:id=\"itemName\" was not injected: check your FXML file 'Dashboard.fxml'.";
    assert itemLocationX !=
    null : "fx:id=\"itemLocationX\" was not injected: check your FXML file 'Dashboard.fxml'.";
    assert itemLocationY !=
    null : "fx:id=\"itemLocationY\" was not injected: check your FXML file 'Dashboard.fxml'.";
    assert itemLength !=
    null : "fx:id=\"itemLength\" was not injected: check your FXML file 'Dashboard.fxml'.";
    assert itemWidth !=
    null : "fx:id=\"itemWidth\" was not injected: check your FXML file 'Dashboard.fxml'.";
    assert itemHeight !=
    null : "fx:id=\"itemHeight\" was not injected: check your FXML file 'Dashboard.fxml'.";
    assert itemPrice !=
    null : "fx:id=\"itemPrice\" was not injected: check your FXML file 'Dashboard.fxml'.";
  }

  public void setMain(Main main) {
    this.main = main;
    farmTreeView.setRoot(
      new TreeItem<ItemComponent>(main.getRootItemContainer())
    );
    farmTreeView.getRoot().setExpanded(true);
  }

  private void addToInfoLog(String message) {
    infoLog.appendText(String.format("%s\n", message));
  }

  private TreeItem<ItemComponent> getCurrentSelection() {
    TreeItem<ItemComponent> selection = farmTreeView
      .getSelectionModel()
      .getSelectedItem();
    if (selection == null) selection = farmTreeView.getRoot();
    return selection;
  }

  private void addToFarmTreeView(ItemComponent component) {
    TreeItem<ItemComponent> selection = getCurrentSelection();
    ItemComponent selectionValue = selection.getValue();
    if (selectionValue instanceof Item) addToInfoLog(
      "Cannot add to an Item; try adding to an ItemContainer"
    ); else { // selection is an ItemContainer
      TreeItem<ItemComponent> treeItem = new TreeItem<ItemComponent>(component);
      treeItem.setExpanded(true);
      selection.getChildren().add(treeItem);
      addToInfoLog(
        String.format("%s added", component.getClass().getSimpleName())
      );
    }
  }

  @FXML
  /*
   * Called when the "Add Item" button is clicked
   */
  public void addItem(ActionEvent event) {
    addToFarmTreeView(new Item());
  }

  @FXML
  /*
   * Called when the "Add ItemContainer" button is clicked
   */
  public void addItemContainer(ActionEvent event) {
    addToFarmTreeView(new ItemContainer());
  }

  @FXML
  /*
   * Called when the "Delete Selection" button is clicked
   */
  public void deleteSelection(ActionEvent event) {
    TreeItem<ItemComponent> selection = getCurrentSelection();
    if (selection == farmTreeView.getRoot()) addToInfoLog(
      "Cannot delete the Root ItemContainer"
    ); else {
      TreeItem<ItemComponent> parent = selection.getParent();
      parent.getChildren().remove(selection);
      addToInfoLog("Selection deleted");
    }
  }

  @FXML
  /*
   * Called when the "Update Selection" button is clicked
   */
  public void updateSelection(ActionEvent event) {
    addToInfoLog("Selection updated");
  }

  @FXML
  /*
   * Called when the "Deploy Drone" button is clicked
   */
  public void deployDrone(ActionEvent event) {
    addToInfoLog("Drone deployed");
  }
}
